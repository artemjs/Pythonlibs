#!/usr/bin/env python3
"""
üéØ –ë–∞–∑–æ–≤–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ friendly_exceptions
Basic usage of friendly_exceptions

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏
This example shows how the library automatically handles errors
"""

# –ü—Ä–æ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É - –æ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è!
# Just import the library - it automatically sets up!
import friendly_exceptions

print("üöÄ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è friendly_exceptions")
print("=" * 50)

# 1. KeyError - –æ—à–∏–±–∫–∞ –∫–ª—é—á–∞
print("\n1Ô∏è‚É£ KeyError Example:")
data = {"name": "Alice", "age": 25}
print(f"City: {data['city']}")  # –ö–ª—é—á 'city' –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - friendly_exceptions –ø–æ–∫–∞–∂–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ

# 2. AttributeError - –æ—à–∏–±–∫–∞ –∞—Ç—Ä–∏–±—É—Ç–∞
print("\n2Ô∏è‚É£ AttributeError Example:")
text = "Hello World"
print(text.uppercase())  # –ú–µ—Ç–æ–¥ uppercase() –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç - friendly_exceptions –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –º–µ—Ç–æ–¥

# 3. ValueError - –æ—à–∏–±–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è
print("\n3Ô∏è‚É£ ValueError Example:")
number = int("abc")  # –ù–µ–ª—å–∑—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å "abc" –≤ —á–∏—Å–ª–æ - friendly_exceptions –æ–±—ä—è—Å–Ω–∏—Ç –ø—Ä–æ–±–ª–µ–º—É

# 4. TypeError - –æ—à–∏–±–∫–∞ —Ç–∏–ø–∞
print("\n4Ô∏è‚É£ TypeError Example:")
result = "Hello" + 123  # –ù–µ–ª—å–∑—è —Å–ª–æ–∂–∏—Ç—å —Å—Ç—Ä–æ–∫—É –∏ —á–∏—Å–ª–æ - friendly_exceptions –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–±

print("\n‚ú® –í—Å–µ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —Å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º–∏ –æ–±—ä—è—Å–Ω–µ–Ω–∏—è–º–∏!")
print("‚ú® All errors handled with friendly explanations!")
