#!/usr/bin/env python3
"""
üåç –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è friendly_exceptions
Real-world scenarios with friendly_exceptions

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –ø–æ–º–æ–≥–∞–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–∞—Ö
This example shows how the library helps in real projects
"""

import friendly_exceptions
import json
import os
from datetime import datetime

print("üåç –†–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
print("üåç Real-world Usage Scenarios")
print("=" * 50)

# –°—Ü–µ–Ω–∞—Ä–∏–π 1: –†–∞–±–æ—Ç–∞ —Å API
print("\n1Ô∏è‚É£ –°—Ü–µ–Ω–∞—Ä–∏–π: –†–∞–±–æ—Ç–∞ —Å API")
print("1Ô∏è‚É£ Scenario: Working with API")

def process_user_data(api_response):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ API"""
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_data = api_response["user"]
        username = user_data["username"]
        email = user_data["email"]
        profile = user_data["profile"]
        
        print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {username}")
        print(f"Email: {email}")
        print(f"–ü—Ä–æ—Ñ–∏–ª—å: {profile}")
        
    except KeyError:
        pass  # friendly_exceptions –ø–æ–∫–∞–∂–µ—Ç, –∫–∞–∫–æ–π –∫–ª—é—á –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç

# –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç API —Å –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º–∏ –ø–æ–ª—è–º–∏
api_response = {
    "user": {
        "username": "alice",
        # "email": "alice@example.com",  # –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç email
        "profile": {"age": 25}
    }
}

process_user_data(api_response)

# –°—Ü–µ–Ω–∞—Ä–∏–π 2: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
print("\n2Ô∏è‚É£ –°—Ü–µ–Ω–∞—Ä–∏–π: –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏")
print("2Ô∏è‚É£ Scenario: Working with files")

def load_config_file(filename):
    """–ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞"""
    try:
        with open(filename, 'r') as f:
            config = json.load(f)
            database_url = config["database"]["url"]
            api_key = config["api"]["key"]
            print(f"Database URL: {database_url}")
            print(f"API Key: {api_key}")
    except (FileNotFoundError, KeyError, json.JSONDecodeError):
        pass  # friendly_exceptions –æ–±—ä—è—Å–Ω–∏—Ç –ø—Ä–æ–±–ª–µ–º—É

# –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª
load_config_file("config.json")

# –°—Ü–µ–Ω–∞—Ä–∏–π 3: –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏
print("\n3Ô∏è‚É£ –°—Ü–µ–Ω–∞—Ä–∏–π: –†–∞–±–æ—Ç–∞ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏")
print("3Ô∏è‚É£ Scenario: Working with objects")

class User:
    def __init__(self, name, age):
        self.name = name
        self.age = age
        self.created_at = datetime.now()
    
    def get_info(self):
        return f"{self.name}, {self.age} years old"

def process_user(user_obj):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ä–µ–∫—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        info = user_obj.get_info()
        email = user_obj.email  # –ê—Ç—Ä–∏–±—É—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        print(f"Info: {info}")
        print(f"Email: {email}")
    except AttributeError:
        pass  # friendly_exceptions –ø–æ–∫–∞–∂–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—ã—Ç–∞–µ–º—Å—è –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å
user = User("Bob", 30)
process_user(user)

# –°—Ü–µ–Ω–∞—Ä–∏–π 4: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
print("\n4Ô∏è‚É£ –°—Ü–µ–Ω–∞—Ä–∏–π: –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –æ–ø–µ—Ä–∞—Ü–∏–∏")
print("4Ô∏è‚É£ Scenario: Mathematical operations")

def calculate_average(numbers):
    """–í—ã—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥–Ω–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è"""
    try:
        total = sum(numbers)
        count = len(numbers)
        average = total / count
        return average
    except (TypeError, ZeroDivisionError):
        pass  # friendly_exceptions –æ–±—ä—è—Å–Ω–∏—Ç –ø—Ä–æ–±–ª–µ–º—É

# –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ä–∞–∑–Ω—ã–º–∏ –≤—Ö–æ–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
calculate_average([])  # –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫
calculate_average(["1", "2", "3"])  # –°—Ç—Ä–æ–∫–∏ –≤–º–µ—Å—Ç–æ —á–∏—Å–µ–ª

print("\n‚ú® –í—Å–µ —Ä–µ–∞–ª—å–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã!")
print("‚ú® All real-world scenarios handled!")
print("\nüí° –°–æ–≤–µ—Ç: friendly_exceptions –æ—Å–æ–±–µ–Ω–Ω–æ –ø–æ–ª–µ–∑–µ–Ω –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏ –æ—Ç–ª–∞–¥–∫–µ!")
print("üí° Tip: friendly_exceptions is especially useful during development and debugging!")
