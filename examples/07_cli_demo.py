#!/usr/bin/env python3
"""
üñ•Ô∏è CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å friendly_exceptions
CLI interface of friendly_exceptions

–≠—Ç–æ—Ç –ø—Ä–∏–º–µ—Ä –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
This example shows how to use the command line interface
"""

import subprocess
import sys
import os

print("üñ•Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞")
print("üñ•Ô∏è CLI Interface Demo")
print("=" * 50)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ –±–∏–±–ª–∏–æ—Ç–µ–∫–∞
try:
    import friendly_exceptions
    print("‚úÖ friendly_exceptions —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    print("‚úÖ friendly_exceptions is installed")
except ImportError:
    print("‚ùå friendly_exceptions –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    print("‚ùå friendly_exceptions is not installed")
    print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install friendly-exceptions")
    print("üí° Install: pip install friendly-exceptions")
    sys.exit(1)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ CLI –∫–æ–º–∞–Ω–¥
def run_cli_command(command):
    """–ó–∞–ø—É—Å–∫ CLI –∫–æ–º–∞–Ω–¥—ã"""
    try:
        result = subprocess.run(
            command, 
            shell=True, 
            capture_output=True, 
            text=True, 
            timeout=10
        )
        return result.returncode, result.stdout, result.stderr
    except subprocess.TimeoutExpired:
        return -1, "", "Command timed out"
    except Exception as e:
        return -1, "", str(e)

# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ CLI –∫–æ–º–∞–Ω–¥—ã
cli_commands = [
    ("friendly-exceptions --help", "–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É / Show help"),
    ("friendly-exceptions --version", "–ü–æ–∫–∞–∑–∞—Ç—å –≤–µ—Ä—Å–∏—é / Show version"),
    ("friendly-exceptions --current-language", "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫ / Show current language"),
]

print("\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ CLI –∫–æ–º–∞–Ω–¥—ã:")
print("üìã Available CLI commands:")

for command, description in cli_commands:
    print(f"\nüîß {description}")
    print(f"   –ö–æ–º–∞–Ω–¥–∞ / Command: {command}")
    
    returncode, stdout, stderr = run_cli_command(command)
    
    if returncode == 0:
        print("   ‚úÖ –£—Å–ø–µ—à–Ω–æ / Success")
        if stdout.strip():
            print(f"   üì§ –í—ã–≤–æ–¥ / Output:\n{stdout}")
    else:
        print("   ‚ùå –û—à–∏–±–∫–∞ / Error")
        if stderr.strip():
            print(f"   üì§ –û—à–∏–±–∫–∞ / Error:\n{stderr}")

# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ —Å–∫—Ä–∏–ø—Ç–µ
print("\nüêç –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ Python —Å–∫—Ä–∏–ø—Ç–µ:")
print("üêç Usage in Python script:")

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
demo_script = '''
import friendly_exceptions

# –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
try:
    data = {"name": "Alice"}
    print(data["age"])  # –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–π –∫–ª—é—á
except KeyError:
    pass  # friendly_exceptions –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–µ—Ç
'''

with open("temp_demo.py", "w", encoding="utf-8") as f:
    f.write(demo_script)

print("   üìù –°–æ–∑–¥–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç temp_demo.py")
print("   üìù Created temporary script temp_demo.py")

# –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
print("   üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç...")
print("   üöÄ Running script...")

returncode, stdout, stderr = run_cli_command("python temp_demo.py")

if returncode == 0:
    print("   ‚úÖ –°–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")
    print("   ‚úÖ Script executed successfully")
    if stdout.strip():
        print(f"   üì§ –í—ã–≤–æ–¥ / Output:\n{stdout}")
else:
    print("   ‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
    print("   ‚ùå Execution error")
    if stderr.strip():
        print(f"   üì§ –û—à–∏–±–∫–∞ / Error:\n{stderr}")

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
try:
    os.remove("temp_demo.py")
    print("   üóëÔ∏è –í—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
    print("   üóëÔ∏è Temporary file removed")
except:
    pass

print("\n‚ú® CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–∞–±–æ—Ç–∞–µ—Ç –æ—Ç–ª–∏—á–Ω–æ!")
print("‚ú® CLI interface works great!")
print("\nüí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ CLI –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏!")
print("üí° Tip: Use CLI for quick configuration!")
